{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red87\green87\blue87;\red0\green0\blue0;\red0\green0\blue0;
}
{\*\expandedcolortbl;;\cssrgb\c41531\c41531\c41531;\cssrgb\c0\c1\c1;\cssrgb\c0\c0\c0;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 PYCBase README\
\
PYCBase is a module which can generate from 0 - infinite bits custom base numbers (minimum is base2 (binary) and maximum is base10 (decimal))\
\
1. installing PYCBase\
To install PYCBase go to the PYCModl file and click on it. After that click the \'84raw\'93 button to open the raw          source code in you browser then in your browser right click the page and click \'84save as\'93 and save it as PYCModl.py\
\
2. importing PYCBase in python\
To use the PYCBModl module in python create a .py file in the same directory as PYCBModl.py.\
Now in that new .py file import PYCBModl as PYCBase.\
\
3. How to use PYCBase\
To use PYCBase create an object and specify too parameters first is how many bits you want one number to have and the second one is the Base parameter like this: obj = PYCBase.RBN(8, 2).\
PYCBase includes 2 methods first is GenNum() which generates from the initialized PYCBase.RBN(x, y) from above and GenLis() which uses the GenNum() method to generate a list of all specified parameters (in this case its all 8-bits base2 numbers which is 255 numbers)\
\
4. Code Example\
\
\cf2 1 \cf3 import PYCBModl as PYCBase\cf2 \
2 \
3 \cf3 obj = PYCBase.RBN(int(input(\'82Bits:\'91)), int(input(\'82Base:\'91)))\cf2 \
4 \cf4 print(obj.GenLis())}